using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using  System.Data.OleDb; // may be reqd
using System.Xml.Linq;
using System.Data.SqlClient;
//using System.Data.SqlServerCe; // .SqlServerCe; // .SqlServerCe; //  .Client 
using System.Configuration;
using System.Reflection;
using System.Text.RegularExpressions;
//using
using LinqToExcel;
using log4net;
using Printing.DataGridViewPrint.Tools;
using System.Drawing.Printing;
using Printing.DataGridViewPrint;
using System.IO;
using   System.Deployment.Application; 
using  System.Deployment; 

namespace YuvaParichay
{
    public partial class Form1 : Form
    {
        PrintingDataGridViewProvider printProvider;
        //Printing.DataGridViewPrint.Tools.PrintingDataGridViewProviderYP printProvider; // trick failed
  //nsb      YuvaParichay.PrintingDataGridViewProviderYP printProvider;
          //System.Drawing.Printing.PrintDocument printDocument;
        
        //         this.girlsDataGridView = new System.Windows.Forms.DataGridView();   
        //protected  DataGridView dgData; //= new DataGridView() ; //23-11-14. 
        //For Copy/Paste:To be used as ref.for using codes of sample DGVPaste proj.

        //dt 5-4-15
       string  BG = "";

       public formReport rpt= new formReport();  
       public   AppDomain currentDomain   ;    
       public   string dataDirectory = " ";
 //      public DataSet1 ds = new DataSet1();
       //Shared
       public DataGridView dgData; //= new DataGridView();
       //System.Drawing.Printing.PrintDocument printDocument;
       string strStep1Help = "STEP1-Help: CodeReg-No is Required, Name is desirable, Mobile num is desirable (Required if result is to be sent by SMS). The data can be entered by any of the following methods (Separately for BOYS and GIRLS): (1) Ask the DTP work agency who prints booklet to give these data in MS Excel format by EMail/In pendrive in the above format. Then you can copy/paste(append only) these data in the below table and varify that last row is correct. (2) Manually enter the data from the booklet. Use Tools Menu to fill codes for speed.";
       string strStep2Help = "STEP2-Help: Many Candidates would have submitted their choices on a piece of paper (May be pre-printed form supplied at start)  showing: Own Code with Name followed by Code Num of of opposit sex (Separately for BOYS and GIRLS). : Select Candidate From List-Box Located At Top then Enter Codes of Choice in 2nd column.";
       string strStep3Help = "STEP3-Help: No Data Entry/Edit, it is only for processing of data of STEP-1 and STEP-2. If data of Step-1/2 are modified then this Step must be Run again. Here the choices of Candidates (Entered in Step-2) are posted into Individual accounts (Entered in Step-1) accross opposite sex.  After this Step each Candidate Knows all who likes him/her. You might like to randomly varify this in Step-4.";
       string strStep4Help = "STEP4-Help: Shows Reports Generated by Step-3.  Reports :(1)/(2) Boys/Girls: Own Code Num, Name, Mobile Num and List of all Candidates of opposit sex who Liked this candidate. The Candidate can cocentrate over this list. Report-3: List of Candidates who both likes Each Other. Here the Chances of developing relations are far better.All these Reports might be randomly varified, printed in more copies and displayed at several places for Candidates to Note down details.";
       string strStep5Help = "STEP5-Help: Optional: Send SMS of individual details from Reports of Step-4 to each Candidate including absentees who have valid Mobile Num. For this Internet connection is not required. Only SIM preferably with economical scheme of SMS activated is required. This SIM can be connected to PC/Laptop through (a) Dongle, (b) Mobile phone (preferably non-smart) with PC Suit installed on PC. This phone can be connected to PC with (1) Wire OR (2) Blue Tooth etc. SMS Format = " + "From <Short Name of Organisation>, <Code & Name of Candidate>, You are Liked by: <List of Code Nos of Candidates who like You>"; 

  
        public Form1()
        {
            InitializeComponent();
           // this. .Icon = Properties.Resources.NsbPhoto; 
            // linqToExcel();
           // System.Drawing.Printing.PrintDocument printDocument ; //(); 
            printDocument.DefaultPageSettings.Margins =  new System.Drawing.Printing.Margins(40, 40, 40, 40);

     //       boysBindingSource.Sort = "IdCandidatePK";
     //       girlsBindingSource.Sort = "IdCandidatePK";  //does it create problem in process of posting in LikedByConcate

            //directly sort data table
           // this.dataSet1.Boys.DefaultView.Sort = "IdCandidatePK";
           // this.dataSet1.Girls.DefaultView.Sort = "IdCandidatePK"; //It prevent processData->manipulate to process

            //      boysLikeBindingSource.Sort = "IdCandidateFK";
           // boysLikeBindingSource.Sort = "IdCandidateFK"; Err: Not in IBindingList.
          
           // girlsLikeBindingSource.Sort = "IdCandidateFK";         
            

            //string strStep1Help = "Help: Code (or Reg No.) is Required, Name is desirable, Mobile num is desirable  (Required if result is to be sent by SMS). The data can be entered by any of the following methods (Separately for BOYS and GIRLS). : (1) Ask the DTP work agency who prints booklet to give these data in MS Excel format by EMail/In pendrive in the above format. Then you can copy/paste these data in the below table and varify that last row is correct. (2) Manually enter the data from the booklet.";
            //string strStep2Help = "Help: Many Candidates would have submitted their choices on a piece of paper (May be pre-printed form supplied at start)  showing: Own Code with Name followed by Code Num of of opposit sex (Separately for BOYS and GIRLS). : Select Candidate From List-Box Located At Top then Enter Codes of Choice." ;
            //string strStep3Help = "Help: No Data Entry/Edit, it is only for processing of data of STEP-1 and STEP-2. If data of Step-1/2 are modified then this Step must be Run again. Here the choices of Candidates (Entered in Step-2) are posted into Individual accounts (Entered in Step-1) accross opposit sex.  After this Step each Candidate Knows All Who likes him/her. You might like to randomly varify this in Step-4.";
            //string strStep4Help = "Shows Reports Generated by Step-3.  Reports :(1)/(2) Boys/Girls: Own Code Num, Name, Mobile Num with List of all Candidates of opposit sex who Liked this candidate. The Candidate can cocentrate over this list. Report-3: List of Candidates who both likes Each Other. Here the Chances of developing relations are far better.All these Reports might be randomly varified, printed in more copies and displayed at several places for Candidates to Note down details.";
            //string strStep5Help = "Optional: Send SMS of individual details from Reports of Step-4 to each Candidate including absentees who have valid Mobile Num. For this Internet connection is not required. Only SIM preferably with economical scheme of SMS activated is required. This SIM can be connected to PC/Laptop through (a) Dongle, (b) Mobile phone (preferably non-smart) with PC Suit installed on PC. This phone can be connected to PC with (1) Wire OR (2) Blue Tooth etc. SMS Format = " + "Form <Short Name of Organisation>, <Code & Name of Candidate>, You are Liked by: <List of Code Nos of Candidates who like You>" ; 

          // printPreviewDialog.Document = printDocument;  //nsb
          //  printPreviewDialog.ShowDialog();   //nsb
    
             //dgData= new DataGridView();
        //    printProvider = PrintingDataGridViewProvider.Create( printDocument,
        //        GridView, chkLevelByLevel.Checked, chkCenter.Checked, chkFitColumns.Checked,

            //printProvider = PrintingDataGridViewProvider.Create( printDocument1,
            //    dataGridView1, true, false, false,
            //new TitlePrintBlock()
            //    {
            //        ForeColor = Color.DarkBlue,
            //        Title = printDocument1.DocumentName
            //    },
            //    new YuvaParichay. PrintBlocks.HeaderPrintBlock(),
            //    new YuvaParichay.PrintBlocks.FooterPrintBlock()
            //);

        }

 
        //For Copy/Paste:To be used as ref.for using codes of sample DGVPaste proj. //shared


       // private Dictionary<YuvaParichay.DataSet1.BoysRow , IEnumerable<YuvaParichay.DataSet1.BoysLikeRow>> GroupChoice;

        //protected  ada TableAdapter

        //public   DataGridView p_dgData { get{return dgData;} set{dgData=value;} }

        private static void linqToExcel()
        {
            LinqToExcel.ExcelQueryFactory book = new ExcelQueryFactory();
            book.FileName = "c:\\nsb\\fb\\prg\\dropbox\\YuvaParichay\\YuvaParichay.xlsx";
            // book.FileName = "c:\\nsb\\fb\\prg\\dropbox\\YuvaParichay\\Names.xls";
            //= New LinqToExcel.ExcelQueryFactory();
            //IEnumerable<Candidate> ws =
            //IQueryable<Candidate>  c =
  //          book.Worksheet(0);
            //book.   //FileName = "YuvaParichay.xls";  //.Worksheet ws = new 
            //IQueryable<Candidate> 
 //           LinqToExcel.Query.ExcelQueryable<Row> rows = book.Worksheet(0);
  //          rows.AsQueryable();
            // Create an enumerable collection of the elements.
            //IEnumerable<Candidate> elements = rows.ElementType;//.Elements();

 //           int count = rows.Count();
            //IEnumerable<Row> rows= rows; 
            //string s1 = rows() ;
            //Candidates = from x in   rows//.All<Candidate> //(0) 
            ////        //where x.FirstName = "Paul" 
            //      select x;

     //       foreach (LinqToExcel.Row c in rows)
     //       {
     //           Console.WriteLine(c.ColumnNames);
     //       }

            //foreach (row c in rows)
            //    Console.WriteLine(c._Code + " " + c._Name + " " + c._MobileNum);

            //Next
            Console.Read(); //ReadKey It is Win form appl not console.


        }

        private void Form1_Load(object sender, EventArgs e)
        {
          //  printPreviewDialog.Document = printDocument;  //nsb
  
            // TODO: This line of code loads data into the 'dataSet1.qryMatchBoyGirl' table. You can move, or remove it, as needed.
   //         this.qryMatchBoyGirlTableAdapter.Fill(this.dataSet1.qryMatchBoyGirl);
            // TODO: This line of code loads data into the 'dataSet1.qryBoysAndBoysLikedBy' table. You can move, or remove it, as needed.
   //         this.qryBoysAndBoysLikedByTableAdapter.Fill(this.dataSet1.qryBoysAndBoysLikedBy);
            // TODO: This line of code loads data into the 'dataSet1.GirlsLike' table. You can move, or remove it, as needed.
            this.girlsLikeTableAdapter.Fill(this.dataSet1.GirlsLike);
            // TODO: This line of code loads data into the 'dataSet1.Girls' table. You can move, or remove it, as needed.
            this.girlsTableAdapter.Fill(this.dataSet1.Girls);
            // TODO: This line of code loads data into the 'dataSet1.Boys' table. You can move, or remove it, as needed.
            
            //this.girlsLikedByTableAdapter.Fill(this.dataSet1.GirlsLikedBy);
            this.girlsLikedByTableAdapter1.Fill(this.dataSet1.GirlsLikedBy);
        

            this.boysTableAdapter.Fill(this.dataSet1.Boys);       
            //this.boysLikedByTableAdapter.Fill(this.dataSet1.BoysLikedBy);
            this.boysLikedByTableAdapter1.Fill(this.dataSet1.BoysLikedBy);
            this.boysLikeTableAdapter.Fill(this.dataSet1.BoysLike); //This line could have saved my lot of time.
          //try{
          //    this.qryMatchBoyGirlTableAdapter.Fill(this.dataSet1.qryMatchBoyGirl);
          //}
          //  catch (OleDbException err){
          //      MessageBox .Show (err.Message );
          //  }
     //     this.qryBoysAndBoysLikedByTableAdapter.Fill(this.dataSet1.qryBoysAndBoysLikedBy);
  
            
           // this.girlsLikedByTableAdapter1.Fill(this.dataSet1.GirlsLikedBy);
           // this.boysLikeTableAdapter.Fill(this.dataSet1.BoysLike); // Trust this line more.

            progressBarShare.Minimum = 0; //Prog Bar commen data
            progressBarShare.Maximum = 100;
            txtStepHelp.Text = strStep1Help; //Init step-1 help 20-3-15 
            this.Text = "Yuva Parichay";

            this.dgvBoys.Sort(dgvBoys.Columns[0], ListSortDirection.Ascending);//Make available for both step-1/2
            this.dgvGirls.Sort(dgvGirls.Columns[0], ListSortDirection.Ascending);        

            //Dt 7-4-15. Validation-security. //Dt19-9-16: Remove validation to make it open.
            //YuvaParichay.Properties.Settings mySettings = new Properties.Settings();
            DateTime dtC = System.DateTime.Today;
            //if (Convert.ToUInt32(dtC) > Convert.ToUInt32("30-06-2016"))           
            
            // Dt 19-9-16  remove date validation!  
            //if (dtC > Convert.ToDateTime("30-06-2016"))
            //{
            //    MessageBox.Show("This Version is Invalid. Reports are disabled \n Please Contact For New Version");
            //    //this.Close();
            //    this.btnProcessData.Enabled = false;
            //    this.btnStep4BoysReport.Enabled = false;
            //    this.btnStep4GirlsReport.Enabled = false;
            //    this.btnStep4MatchReport .Enabled = false;
            //}
           // mySettings.VD = Convert.ToUInt32("31-03-2015"); it is read only. 
        

            //    dgvGirlsLike.BeginEdit(true);
            //    dgvBoysLike.BeginEdit(true);  
            //this.girlsLikeTableAdapter.Fill(this.dataSet1.GirlsLike); //don't repeat

            // dgData = dataGridView1; Moved to private void dataGridView1_Enter(object sender, EventArgs e)

            //string  fileName = System.IO.Path.Combine(System.IO.Directory.GetCurrentDirectory(), "YuvaParichay.xls");
            //c:\nsb\fb\prg\dropbox\YuvaParichay\YuvaParichay.xls

           //TestDataSetProperties(); //Keep
     
            // 1-12-14 //this.dataGridView1.DataSource = this.boysBindingSource;
 //           pnlDataGrid.Controls.Add(this.girlsDataGridView ); //lets see if it is displayed. //temp? Not reqd.
            //pnlDataGrid.

            //AppDomain Shifted up
            //These line could have saved my lot of time.
  // currentDomain = AppDomain.CurrentDomain;
  //           dataDirectory = (string)currentDomain.BaseDirectory; // +"\\Data"; //Temp for debug only 
  //          MessageBox.Show("Data Dir = " + currentDomain.BaseDirectory);
  //          currentDomain.SetData("DataDirectory", dataDirectory); //  strData ); //"\\Data");
       }

        private void TestDataSetProperties()
        {
            //18-11-14  Use Dataset
            // System.Xml.Schema.XmlSchemaComplexType xmlSchemaComplex= new DataSet1.GetDataSetSchema();
            //   DataSet1 ds = new DataSet1();
            //DataSet2 ds = new DataSet2();

            string dsNameStr = this.dataSet1.DataSetName;
            //string[] 
            System.Data.PropertyCollection userProperties = this.dataSet1.ExtendedProperties;
            string xmlStr = this.dataSet1.GetXml();
            string xmlStr1 = this.dataSet1.GetXmlSchema();

            //ds.Load 
            string namespcStr = this.dataSet1.Namespace;
            this.dataSet1.ReadXml("c:\\xmlFile1.xml", System.Data.XmlReadMode.IgnoreSchema); //how it does?
            DataRelationCollection datarelCollection = this.dataSet1.Relations;
            System.ComponentModel.ISite site = this.dataSet1.Site;
            System.Data.DataTableCollection tables = this.dataSet1.Tables;
            int totallTables = this.dataSet1.Tables.Count;
            string firstTable = this.dataSet1.Tables[0].TableName;
            // ds.WriteXml("c:\\nsbYPTest.xml", XmlWriteMode.DiffGram); //WriteSchema); // ?
            // ds.WriteXmlSchema 
            int relCount = this.dataSet1.Relations.Count;
            // ndx=MergedPtsWithToes.FindIndex (x => x.Id == "Toe"); //find index by lembada func     

        }

      //23-11-14. For Copy/Paste: source copied from DGVPaste proj
     private void copyToolStripMenuItem_Click(object sender, EventArgs e)
     {
         CopyClipboard(); //Copy To Clipp board.
     }

     private void CopyClipboard() //Copy To Clipp board.
     {
         try
         {
             DataObject d = dgData.GetClipboardContent();
             Clipboard.SetDataObject(d);
         }
         catch (ArgumentNullException e)
         {
             MessageBox.Show(e.Message);
         }
     }



     private void pasteCtrlVToolStripMenuItem_Click(object sender, EventArgs e) //Now Append only
      {
 //        PasteClipboard();
         //PasteClipboard( dataGridView1);
         //AppendFromClipboardToTable(dataSet1 ); //DataMember
         // String BG= "" ;
          if (dgvBoys.Focused) BG = "Boys";
          if (dgvGirls.Focused) BG = "Girls";
          try
          {
              AppendFromClipboardToTableCommenDGV(dataSet1, BG);
          }
          catch (Exception ex)
          {
              MessageBox.Show(ex.Message);
          }
         dgData.Refresh();
      }


     //         private void AddARow(DataTable table)  'Guide to solve "Rows ca not be programatically added
     //{
     //    // Use the NewRow method to create a DataRow with 
     //    // the table's schema.
     //    DataRow newRow = table.NewRow();

     //    // Add the row to the rows collection.
     //    table.Rows.Add(newRow);
     //}


     //up vote
     //-2
     //down vote
     //After adding a new row, you have to set the row index in boundary of row count. You have to do these steps.

     //First, add row in DataGridView:

     //dataGridView1.Rows.Add();
     //Second, set new row index to count - 1:

     //int RowIndex = dataGridView1.RowCount - 1;
     //Then at last, set the controls values in it:

     //DataGridViewRow R = dataGridView1.Rows[RowIndex];
     //R.Cells["YourName"].Value = tbName.Text;
     //And if your datagrid's source is datattable you have to add row in that table.Give new values to the newly added row 
     //in data table and at last rebind the datagrid with updated datatable.

     //    DataRow row = dt.NewRow();  
     //    row["columnname"] = tbName.Text.toString();  
     //    dt.Rows.Add(row);
     //    dt.AcceptChanges();  

     //   dataGridView1.DataSource = dt;  
     //   dataGridView1.DataBind();

// Instead of pasting in Data Table, do in DataGV
     private void AppendFromClipboardToTableCommenDGV(DataSet dataSet, String BoyGirl) //DataGridView dgv)
     {
         // DataBindings   dataBinding= new dat dgData.DataBindings;
         // DataSource ds = new DataSource();    

         try
         {
             //DataTable dt = dataSet.Tables[BoyGirl];    //bs.Data;  //Form1.BindingSource.DataMember;
             DataTable dt = dataSet1.Tables[BoyGirl];    
             //String   strDataSource =(String)  dgv.DataSource ; //.GetType(); this.dataSet1 = dgv.DataSource; 
            // DataGridViewRow selectedRow;
             /* Find first selected cell's row (or first selected row). */
             //             if (dgv.SelectedRows.Count > 0)
             //                 selectedRow = dgv.SelectedRows[0];
             //             else if (dgv.SelectedCells.Count > 0)
             //                 selectedRow = dgv.SelectedCells[0].OwningRow;
             //             else
             //                 return;
             /* Get clipboard Text */
             string clipText = Clipboard.GetText();
             /* Get Rows ( newline delimited ) */
             string[] rowLines = Regex.Split(clipText, "\r\n");
             foreach (string row in rowLines)
             {
                 if (row == "") break; // V. Imp. as last Extra line in clipboard may be "".
                 /* Get Cell contents ( tab delimited ) */
                 string[] cells = Regex.Split(row, "\t");
                 //                 DataGridViewRow r = new DataGridViewRow();
                 DataRow dr = dt.NewRow(); //isn't it good enough?
                
                 //DataGridViewRow dgvRow = new DataGridViewRow(); // 5-4-15
                 //this.dataSet1.Boys.NewRow();
                 int i = 0;
                 foreach (string sc in cells)  //inner loop is for cells. not reqd, we can direcly copy rows? No. TAB Char may not be allowed.
                 {
                     // DataRow dr = dt.NewRow();  
                     //    dr["columnname"] = tbName.Text.toString();  
                     //    dt.Rows.Add(dr);
                     //    dt.AcceptChanges();  

                     // Cell  c; // =  Cell ;  
                    // int i = 0;
                     int i32=0;
                     //DataColumn c = new DataColumn();
                    // object o = dr[i];

                     if (i == 0)
                     {
                         i32 = Convert.ToInt32(sc);
                         dr[i] =  i32; 
                     }
                     else  dr[i] = sc;
                     

                     //DataGridCell dgvCell = new DataGridCell();// 5-4-15
                     //dgvCell. = sc;
                    // dgvRow.Cells[i].Value = sc; // V. Good!;

                     //c =(DataColumn) o ;// (DataColumn)sc;   //.ToString;

                     i++;

                     //      DataGridViewTextBoxCell c = new DataGridViewTextBoxCell();
                     //      c.Value = sc;
                     //      r.Cells.Add(c);
                 } // end of inner loop 
                 //dgv.Rows.Insert(selectedRow.Index, r);
 //                dt.Rows.Add(dr);
                 if (BoyGirl == "Boys")
                 {
                     //this.dataSet1.Boys.Rows.Add(cells);
                    // this.dgvBoys.Rows.Add(cells); //Can not be done by program when dgv is data-bound.(No backward integration)
                     //this.dgvBoys.Rows.Add(dgvRow);
                     this.dataSet1.Boys.Rows.Add(dr);
                 }
                 else this.dataSet1.Girls.Rows.Add(dr);//this.dgvGirls.Rows.Add(cells );
                 //this.dgvGirls.Rows.Add(dgvRow);

                 //              this.toolStripStatusLabel1.Text = "Data has been pasted.";
             }
             //Update src and also re-fill?
             if (BoyGirl == "Boys") this.boysTableAdapter.Update(dataSet1);
             else   this.girlsTableAdapter.Update(dataSet1);
         } //end of try
         catch (System.ArgumentException ex)
         {
             //            MessageBeep(MB_ICONEXCLAMATION);
             //            this.toolStripStatusLabel1.Text = ex.Message;
             MessageBox.Show(ex.Message);
         }
         catch (Exception ex)
         {
             MessageBox.Show(ex.Message);
         }

     }


     private void AppendFromClipboardToTableCommen(DataSet dataSet, String BoyGirl ) //DataGridView dgv)
     {
     // DataBindings   dataBinding= new dat dgData.DataBindings;
   // DataSource ds = new DataSource();    
          
         try
         {
             DataTable dt = dataSet.Tables[BoyGirl];    //bs.Data;  //Form1.BindingSource.DataMember;
             //String   strDataSource =(String)  dgv.DataSource ; //.GetType(); this.dataSet1 = dgv.DataSource; 
             DataGridViewRow selectedRow;
             /* Find first selected cell's row (or first selected row). */
             //             if (dgv.SelectedRows.Count > 0)
             //                 selectedRow = dgv.SelectedRows[0];
             //             else if (dgv.SelectedCells.Count > 0)
             //                 selectedRow = dgv.SelectedCells[0].OwningRow;
             //             else
             //                 return;
             /* Get clipboard Text */
             string clipText = Clipboard.GetText();
             /* Get Rows ( newline delimited ) */
             string[] rowLines = Regex.Split(clipText, "\r\n");
             foreach (string row in rowLines)
             {
                 /* Get Cell contents ( tab delimited ) */
                 string[] cells = Regex.Split(row, "\t");
                 //                 DataGridViewRow r = new DataGridViewRow();
                 DataRow dr = dt.NewRow(); //isn't it good enough?
                 foreach (string sc in cells)  //inner loop is for cells. not reqd, we can direcly copy rows? No.
                 {
                     // DataRow dr = dt.NewRow();  
                     //    dr["columnname"] = tbName.Text.toString();  
                     //    dt.Rows.Add(dr);
                     //    dt.AcceptChanges();  

                     // Cell  c; // =  Cell ;  
                     int i = 0;
                     DataColumn c = new DataColumn();
                     object o = dr[i];
                     o = sc;
                     dr[i] = o;
                     //c =(DataColumn) o ;// (DataColumn)sc;   //.ToString;

                     i++;

                     //      DataGridViewTextBoxCell c = new DataGridViewTextBoxCell();
                     //      c.Value = sc;
                     //      r.Cells.Add(c);
                 } // end of inner loop 
                 //dgv.Rows.Insert(selectedRow.Index, r);
                 dt.Rows.Add(dr);

                 //              this.toolStripStatusLabel1.Text = "Data has been pasted.";
             }

         }
         catch (System.ArgumentException ex)
         {
             //            MessageBeep(MB_ICONEXCLAMATION);
             //            this.toolStripStatusLabel1.Text = ex.Message;
             MessageBox.Show(ex.Message);
         }
         catch (Exception ex)
         {
             MessageBox.Show(ex.Message);
         }

     }

     //         private void AddARow(DataTable table)  'Guide to solve "Rows ca not be programatically added
     //{
     //    // Use the NewRow method to create a DataRow with 
     //    // the table's schema.
     //    DataRow newRow = table.NewRow();

     //    // Add the row to the rows collection.
     //    table.Rows.Add(newRow);
     //}


     //up vote
     //-2
     //down vote
     //After adding a new row, you have to set the row index in boundary of row count. You have to do these steps.

     //First, add row in DataGridView:

     //dataGridView1.Rows.Add();
     //Second, set new row index to count - 1:

     //int RowIndex = dataGridView1.RowCount - 1;
     //Then at last, set the controls values in it:

     //DataGridViewRow R = dataGridView1.Rows[RowIndex];
     //R.Cells["YourName"].Value = tbName.Text;
     //And if your datagrid's source is datattable you have to add row in that table.Give new values to the newly added row 
        //in data table and at last rebind the datagrid with updated datatable.

     //    DataRow row = dt.NewRow();  
     //    row["columnname"] = tbName.Text.toString();  
     //    dt.Rows.Add(row);
     //    dt.AcceptChanges();  

     //   dataGridView1.DataSource = dt;  
     //   dataGridView1.DataBind();


     //dt 23-12-14
     //dt 4-4-15. is repl by App...Commen() hence May be discarded!
     private void AppendFromClipboardToTable(DataSet dataSet ) //DataGridView dgv)
     {
         try
         {
             DataTable dt = dataSet.Tables["Boys"];    //bs.Data;  //Form1.BindingSource.DataMember;
            //String   strDataSource =(String)  dgv.DataSource ; //.GetType(); this.dataSet1 = dgv.DataSource; 
             DataGridViewRow selectedRow;
             /* Find first selected cell's row (or first selected row). */
//             if (dgv.SelectedRows.Count > 0)
//                 selectedRow = dgv.SelectedRows[0];
//             else if (dgv.SelectedCells.Count > 0)
//                 selectedRow = dgv.SelectedCells[0].OwningRow;
//             else
//                 return;
             /* Get clipboard Text */
             string clipText = Clipboard.GetText();
             /* Get Rows ( newline delimited ) */
             string[] rowLines = Regex.Split(clipText, "\r\n");
             foreach (string row in rowLines)
             {
                 /* Get Cell contents ( tab delimited ) */
                 string[] cells = Regex.Split(row, "\t");
//                 DataGridViewRow r = new DataGridViewRow();
                 DataRow dr = dt.NewRow(); 
                 foreach (string sc in cells)  //inner loop is for cells. not reqd, we can direcly copy rows? No.
                 {
                        // DataRow dr = dt.NewRow();  
                     //    dr["columnname"] = tbName.Text.toString();  
                     //    dt.Rows.Add(dr);
                     //    dt.AcceptChanges();  

                  // Cell  c; // =  Cell ;  
                     int i = 0;
                     DataColumn c =  new DataColumn();
                     object o =dr[i];
                     o = sc;
                     dr[i] = o;
                    //c =(DataColumn) o ;// (DataColumn)sc;   //.ToString;

                    i++;

               //      DataGridViewTextBoxCell c = new DataGridViewTextBoxCell();
               //      c.Value = sc;
               //      r.Cells.Add(c);
                 } // end of inner loop 
                 //dgv.Rows.Insert(selectedRow.Index, r);
                 dt.Rows.Add(dr);

                 //              this.toolStripStatusLabel1.Text = "Data has been pasted.";
             }


         }
         catch (System.ArgumentException ex)
         {
             //            MessageBeep(MB_ICONEXCLAMATION);
             //            this.toolStripStatusLabel1.Text = ex.Message;
         }
         catch (Exception ex)
         {
             MessageBox.Show(ex.Message);
         }
     }


     private void dgData_KeyDown(object sender, KeyEventArgs e)
     {
         if ((e.Control && e.KeyCode == Keys.Delete) || (e.Shift && e.KeyCode == Keys.Delete))
         {
             CopyClipboard();
         }
         if ((e.Control && e.KeyCode == Keys.Insert) || (e.Shift && e.KeyCode == Keys.Insert))
         {
             AppendFromClipboardToTable(dataSet1); //DataMember  //PasteClipboard();
         }

     }

     private void dgvBoys_Enter(object sender, EventArgs e)
     {
         dgData = dgvBoys; //reqd as ref for copy/paste
     }

     private void dgvGirls_Enter(object sender, EventArgs e)
     {
         dgData = dgvGirls;
     }

     private void SaveTable() //may be useless junk, harmfull?
     {
         //ds.EndInit();      //Lets see if saved now.             //  dataGridView1.Focus();   //= true;
         dgData.Focus();
         try
         {
             if (dgvBoys.Focused) boysTableAdapter.Update(this.dataSet1);
             if (dgvGirls.Focused) girlsTableAdapter.Update(this.dataSet1);

             //Prob: Focus is lost while clicking btnSave.
             //Soln:(1) regain Focus after clicking btnSave
             //(2)  Save-btn each per table. 
             //(3) SaveAllDisplayed
 
             // (4) btnSaveAll
             //Even better? soln is to save all related Gridviews/Tables.
              //boysTableAdapter.Update(this.dataSet1);
              //girlsTableAdapter.Update(this.dataSet1);
             // Simillarly save other tables.

             //(5)Save OnClose

         }
         catch (Exception exceptionObject)
        {
             MessageBox.Show(exceptionObject.Message);
             return;
        }
         MessageBox.Show(" Data Saved! ");
         
          //DataSet1.BoysDataTable tableBoys1= new DataSet1.BoysDataTable();
         //tableBoys1 = this.tableBoys;  boysBindingSource.ta
     }

     private void SaveTable(DataGridView dgData) //may be useless junk, harmfull?
     {
         //ds.EndInit();      //Lets see if saved now.             //  dataGridView1.Focus();   //= true;
         dgData.Focus();
         try
         {
             if (dgvBoys.Focused) boysTableAdapter.Update(this.dataSet1);
             if (dgvGirls.Focused) girlsTableAdapter.Update(this.dataSet1);
             //dgData.DataMember.u     //.DataSource    //DataBindings.
             //Prob: Focus is lost while clicking btnSave.
             //Soln:(1) regain Focus after clicking btnSave
             //(2)  Save-btn each per table. 
             //(3) SaveAllDisplayed

             // (4) btnSaveAll
             //Even better? soln is to save all related Gridviews/Tables.
             //boysTableAdapter.Update(this.dataSet1);
             //girlsTableAdapter.Update(this.dataSet1);
             // Simillarly save other tables.

             //(5)Save OnClose

         }
         catch (Exception exceptionObject)
         {
             MessageBox.Show(exceptionObject.Message);
             return;
         }
         MessageBox.Show(" Data Saved! ");

         //DataSet1.BoysDataTable tableBoys1= new DataSet1.BoysDataTable();
         //tableBoys1 = this.tableBoys;  boysBindingSource.ta
     }

     private void SaveTableBoysLike() //may be useless junk, harmfull?
     {
//         I don't know why this works, but here is how I fixed my problem. At the end of RefreshForm I add the line
//CaseTable.Rows[0].BeginEdit();
//and at the beginning of the Save event handler I add the line
//CaseTable.Rows[0].EndEdit();
         //ds.BeginInit();
        // this.dataSet1.EndInit ();
         this.dataSet1.Tables["Boys"].Rows[0].EndEdit(); //"Boys"
          try
         {
             this.boysLikeTableAdapter.Update(this.dataSet1); //"BoysLike"]); //) ds.BoysLike); //YuvaParichay.DataSet1.BoysLikeDataTable); //ds. .BoysLike.Rows);
  
         }
         catch (Exception exceptionObject)
         {
             MessageBox.Show(exceptionObject.Message);
             return;
         }
         MessageBox.Show("BoysLike Data Saved! ");
      }

     //private void btnSave_Click(object sender, EventArgs e)
     //{
     //    //ds.Tables["Boys"].Rows[0].EndEdit(); //"Boys"
     //    //ds.Tables["BoysLike"].Rows[0].EndEdit(); //"Boys"
       
     //    SaveTable();
     //   // SaveTableBoysLike();
     //}

     //private void btnStep1Boys_Click(object sender, EventArgs e)
     //{
     //    //this.
      
     //}

     //private void btnStep1Girls_Click(object sender, EventArgs e)
     //{
        
     //}

     private void btnStep1Boys_Click_1(object sender, EventArgs e)
     {
         BG = "Boys";
         txtStepHelp.Text = strStep1Help;
         MakeAllDataGridInvisible();         
         //this.dataGridView1.Visible = true;
    //if (dgData != null)
             //{
  // SaveTable();
             //btnSave.PerformClick();  
             //girlsDataGridView.Visible = false; now MakeAllDataGridInvisible();
             //dgData.Dispose(); // save prev table if any, and exit.
         //}

         //dgData = dataGridView1; //load new table;
         //dgData.Visible = true;
         //dgData.Dock = DockStyle.Fill; 

         //Temp 
         dgvBoys.Visible = true;
         dgvBoys.Dock = DockStyle.Fill;
         //25-2-15
         dgData = dgvBoys; //addl ref. May be commen for many data grids

         //Make all other White
         btnStep1Boys.BackColor = Color.White ; //on exiting gridView
         btnStep2Boys.BackColor = Color.White ;
         btnStep1Girls.BackColor = Color.White ;
         btnStep2Girls.BackColor = Color.White ;

         btnStep1Boys.BackColor = Color.Red;
         //dataGridView1.Sort(dataGridView1.Columns[1], ListSortDirection.Ascending); example
        // this.dgvBoys.Sort(dgvBoys.Columns[0], ListSortDirection.Ascending);   //.CellBeginEdit //  .CommitEdit
         //this.dataSet1.Boys. Sort 
         //boysBindingSource.Sort = "IdCandidatePK"; //(dgvBoys.Columns[0].ToString ; //(dgvBoys.Columns[0], ListSortDirection.Ascending);
         this.dgvBoys.Refresh();
          }     

     private void btnStep1Girls_Click_1(object sender, EventArgs e)
     {
         BG = "Girls";
         txtStepHelp.Text = strStep1Help;
         MakeAllDataGridInvisible();
         dgvGirls.Visible = true;
         dgvGirls.Dock = DockStyle.Fill;
         //Make all other White
         btnStep1Boys.BackColor = Color.White ; //on exiting gridView
         btnStep2Boys.BackColor = Color.White;
         btnStep1Girls.BackColor = Color.White;
         btnStep2Girls.BackColor = Color.White;

         btnStep1Girls.BackColor = Color.Red;

         //this.dgvGirls.Sort(dgvGirls.Columns[0], ListSortDirection.Ascending);   //.CellBeginEdit //  .CommitEdit
   
     }

     /// <summary>
     /// Relation that links department (parent) and group (child) entities
     /// </summary>
//     private DataRelation relationBoysBoysLike;
    //   this.relationBoysBoysLike = this..Relations["BoysBoysLike"];
        //DataSet1.
       //Form1.ControlCollection
        
     //    private global::System.Data.DataRelation relationBoysBoysLikedBy;


     private void btnStep2Girls_Click(object sender, EventArgs e)
     {
         txtStepHelp.Text = strStep2Help;
         MakeAllDataGridInvisible();
         dgData = dgvGirlsLike; // dataGridView2; //to save data of dataGridView2 (only)
          dgvGirlsLike.Visible = true;
         dgvGirlsLike.Dock = DockStyle.None;

         listBoxGirls.Visible = true; //data source =girlsBindingSource


         girlsLikeBindingSource.DataSource = girlsBindingSource;
         girlsLikeBindingSource.DataMember = this.dataSet1.Relations["GirlsGirlsLike"].RelationName;
         //Make all other White
         btnStep1Boys.BackColor = Color.White ; //on exiting gridView
         btnStep2Boys.BackColor = Color.White;
         btnStep1Girls.BackColor = Color.White;
         btnStep2Girls.BackColor = Color.White;

         btnStep2Girls.BackColor = Color.Red;
     }    

     private void btnStep2Boys_Click(object sender, EventArgs e)
     {
         txtStepHelp.Text = strStep2Help;
         MakeAllDataGridInvisible();

         dgData = dgvBoysLike; //to save data of dataGridView2 (only)
         //   dataGridView1.Visible = true;  //use lbx list box
         //   dataGridView1.Dock = DockStyle.Left; 
         dgvBoysLike.Visible = true;
         dgvBoysLike.Dock = DockStyle.None;
         listBoxBoys.Visible = true;
        // listBoxBoys.Visible = true;

         // Keep Alt-I
         // Temp. Keep
         boysLikeBindingSource.DataSource = boysBindingSource;  //.Current;   //.List ;         
         boysLikeBindingSource.DataMember = this.dataSet1.Relations["BoysBoysLike"].RelationName;//ds.Tables[0]; //this.boysBindingSource;
         //Make all other White
         btnStep1Boys.BackColor = Color.White ; //on exiting gridView
         btnStep2Boys.BackColor = Color.White;
         btnStep1Girls.BackColor = Color.White;
         btnStep2Girls.BackColor = Color.White;

         btnStep2Boys.BackColor = Color.Red;

         //dataGridView2.DataSource = boysLikeBindingSource;  // Already define in control.
         //boysLikeBindingSource.ResetCurrentItem();    //.ResetBindings();
         //  boysLikeBindingSource.ResumeBinding();
         // boysLikeBindingSource.ResetBindings(true);
         // dataGridView2.Refresh(); //see that related records r visible.
         // boysLikeBindingSource.DataMember = ds.Relations["BoysBoysLike"].RelationName;//ds.Tables[0]; //this.boysBindingSource;

         //this.dgData.CollapseAllDetails(); //<<<< add this line
         //this.dgData.ExpandMasterRow(0);

         ////Alt-II Keep?
         //     var MatchingChoices = from boy in ds.Boys
         //                           join choices in ds.BoysLike on boy.IdCandidatePK equals choices.IdCandidateFK
         //                               into AvailableChoices
         //                           select new { boy1 = boy, choices1 = AvailableChoices };

         //     this.GroupChoice = MatchingChoices.ToDictionary(x => x.boy1, y => y.choices1);
         //     //bsDepartments.DataSource = GroupEmployee.Keys;
         //     boysLikeBindingSource.DataSource  = GroupChoice.Keys; 

         //     if (dgData != null)   SaveTable();
     }

     //private void boysBindingSource_CurrentChanged(object sender, EventArgs e)
     //{// bsEmployees.DataSource = this.GroupEmployee [(Department) bsDepartments.Current];
     //    boysLikeBindingSource.DataSource = this.GroupChoice[(YuvaParichay.DataSet1.BoysRow)boysBindingSource.Current];
     //}

     public void MakeAllDataGridInvisible()
     {
         //close/invisible all datagrids
         foreach (Control ctrl in this.pnlDataGrid.Controls)
         {
             ctrl.Visible = false;
         }
     }

     //private void dataGridView2_RowsAdded(object sender, DataGridViewRowsAddedEventArgs e)
     //{
     //    //SaveTableBoysLike();
     //}

     private void dgvBoys_RowLeave(object sender, DataGridViewCellEventArgs e)
     {
         if (dgvBoys.IsCurrentRowDirty)  //keep uncomment
             btnSaveStep1Boy.PerformClick(); //SaveTable();
     }        
    private void btnSaveStep1Boy_Click(object sender, EventArgs e)
     {
         //boysTableAdapter.Update(this.dataSet1); //It is ok, but try below
         boysTableAdapter.Update(this.dataSet1.Boys); //this.dataSet1  Problem (for boy only): UpdateCommand is 'Null' when overwriting val
       // MessageBox.Show("Boy Data Saved! ");
     }

     private void btnSaveStep1Girl_Click(object sender, EventArgs e)
     {
         girlsTableAdapter.Update(this.dataSet1.Girls); // new renamed method as girl2
         //MessageBox.Show("Girl Data Saved! ");
     }

     private void btnSaveStep2BoyChoices_Click(object sender, EventArgs e)
     {
         try
         {
             boysLikeTableAdapter.Update(this.dataSet1);
         }
         catch (System.InvalidOperationException ioe)
         {
             //current cell
             //dgvGirlsLike.CurrentCell = girlsLikeBindingSource.Current ; //  GirlsLike
             //dgvGirlsLike.BeginEdit(true);  
             //MessageBox.Show(ioe.Message);
             MessageBox.Show("Modification Not Allowed. \n You Should Select This Row by Clicking The Left Most Part of Row Then Press DEL.\n Now Enter Correct Value in New Row");
         }
         catch (DBConcurrencyException dbc)
         {
             MessageBox.Show(dbc.Message);
         }
         // MessageBox.Show("Boys Data Saved! ");
     }
     private void btnSaveStep2GirlChoices_Click(object sender, EventArgs e)
     {
         try
         {
             girlsLikeTableAdapter.Update(this.dataSet1);
         }
         catch (System.InvalidOperationException ioe)
         {            
             MessageBox.Show("Modification Not Allowed. \n You Should Select This Row by Clicking The Left Most Part of Row Then Press DEL.\n Now Enter Correct Value in New Row");
         }
         catch (DBConcurrencyException dbc)
         {
             MessageBox.Show(dbc.Message);
         }       
     } 
     private void dgvGirls_RowLeave(object sender, DataGridViewCellEventArgs e)
     {
         if (dgvGirls.IsCurrentRowDirty)  //keep uncomment
             btnSaveStep1Girl.PerformClick(); //SaveTable();
     }
   
     public void MakeAlltxtStepHelpInvisible()
     {
         //invisible all help
         //txtStep1Help.Visible = false;
         //txtStep2help.Visible = false;
         //txtStep3Help.Visible = false;
         //txtStep4Help.Visible = false;
         //txtStepHelp.Visible = false;
     }

     private void grpStep1_Enter(object sender, EventArgs e)
     {
         txtStepHelp.Text = strStep1Help;
         //txtStepHelp.Visible = true;
     }
    
        //Mouse Hover
     private void grpStep1_MouseHover(object sender, EventArgs e)
     {
         txtStepHelp.Text = strStep1Help;
     }

     private void lblStep1_Click(object sender, EventArgs e)
     {
         txtStepHelp.Text = strStep1Help;
     }
        //Help by label. V good.
     private void lblStep2_Click(object sender, EventArgs e)
     {
         txtStepHelp.Text = strStep2Help;
        // txtStepHelp.Visible = true;
     }

     private void lblStep3_Click(object sender, EventArgs e)
     {
         txtStepHelp.Text = strStep3Help;
     }     

     private void lblStep4_Click(object sender, EventArgs e)
     {
         txtStepHelp.Text = strStep4Help;
     }

     private void lblStep5_Click(object sender, EventArgs e)
     {
         //MakeAlltxtStepHelpInvisible();
         //txtStepHelp.Visible = true;
         txtStepHelp.Text  = strStep5Help;
     }

     private void btnProcessData_Click(object sender, EventArgs e) //Step3.  btnPost_Match_Reports_Click(   )
     {
         txtStepHelp.Text = strStep3Help;
         MakeAllDataGridInvisible();
         ProcessData();

         //Directly sort data table
         //dt.DefaultView.Sort = "timeScore desc"; sample
       //  this.dataSet1.Boys.DefaultView.Sort  = "IdCandidatePK";
       //  this.dataSet1.Girls.DefaultView.Sort = "IdCandidatePK";
     }

     private void btnStep4MatchReport_Click(object sender, EventArgs e)
     {
         // Following 3 lines to be repl with a view to show it in ReportViewer (Form2/ ) ?
         // Are we sure that all related tables r uptodate after processing data?
         // yes, basic 2 tables r always uptodate during data-entry. 
   //MakeAllDataGridInvisible();
   //dgvQryMatchBoyGirl.AutoGenerateColumns = true;
   //dgvQryMatchBoyGirl.Visible = true;
   //dgvQryMatchBoyGirl.Dock = DockStyle.Fill;
        
         progressBarShare.Value = 20;

         MakeAllDataGridInvisible();
         txtStepHelp.Text = strStep4Help;
         progressBarShare.Value = 40;
         // New form for each report reqd.
         formReport rpt = new formReport();
         rpt.reportDataSource3.Value = this.qryMatchBoyGirlBindingSource; 
         rpt.reportViewerMatch.LocalReport.ReportEmbeddedResource = "YuvaParichay.MatchReport.rdlc";
         progressBarShare.Value = 60;
         rpt.reportViewer1.Visible = false;
         rpt.reportViewerGirl.Visible = false;
         rpt.reportViewerMatch.Visible = true ;

         rpt.Refresh();
         progressBarShare.Value = 80;
         rpt.Show();
         progressBarShare.Value = 0; //reset
     }

     private void btnStep4BoysReport_Click(object sender, EventArgs e)
     {         
         progressBarShare.Value = 20;

         MakeAllDataGridInvisible();
         txtStepHelp.Text = strStep4Help;
         progressBarShare.Value = 40;
         formReport rpt = new formReport();
            rpt.reportDataSource1.Name = "DataSet1";
            rpt.reportDataSource1.Value = this.boysBindingSource;    //already generated? Need to be changed  
         rpt.reportViewer1.LocalReport.ReportEmbeddedResource = "YuvaParichay.BoyReport.rdlc";
         progressBarShare.Value = 60;
         rpt.reportViewer1.Visible = true ;
         rpt.reportViewerGirl.Visible = false;
         rpt.reportViewerMatch.Visible = false;

         rpt.Refresh();
         //rpt.Dock = DockStyle.Fill; 
         progressBarShare.Value = 80;
         rpt.Show();
         progressBarShare.Value = 0; //reset
     }

     private void btnStep4GirlsReport_Click(object sender, EventArgs e)
     {
         progressBarShare.Value = 20;
         MakeAllDataGridInvisible();
         txtStepHelp.Text = strStep4Help;
         // New form for each report reqd.
         formReport rpt = new formReport();
                rpt.reportDataSource2.Name = "DataSet1"; //already generated
                rpt.reportDataSource2.Value = this.girlsBindingSource; //already generated
         rpt.reportViewerGirl.LocalReport.ReportEmbeddedResource = "YuvaParichay.GirlReport.rdlc";
         progressBarShare.Value = 60;
         rpt.reportViewer1.Visible = false;
         rpt.reportViewerGirl.Visible = true ;
         rpt.reportViewerMatch.Visible = false;
         progressBarShare.Value = 60;
         rpt.Refresh();
         rpt.Dock = DockStyle.Fill;
         progressBarShare.Value = 80;
         rpt.Show();
         progressBarShare.Value = 0; //reset
     }
        
     private void btnPreview_Click(object sender, EventArgs e)
     {
         //printProvider = YuvaParichay.PrintingDataGridViewProviderYP.Create(printDocument, //nsb

          printProvider = PrintingDataGridViewProvider.Create(printDocument,
           dgvBoys, true, false, false,
      new TitlePrintBlock()
      {
          ForeColor = Color.DarkBlue,
          Title = printDocument.DocumentName
      },
          new YuvaParichay.PrintBlocks.HeaderPrintBlock(),
          new YuvaParichay.PrintBlocks.FooterPrintBlock()
      );

         if (printDialog.ShowDialog(this) == DialogResult.OK)
             printPreviewDialog.Document = printDocument;  //nsb: V.IMP. This line could have saved my 1 week.
             printPreviewDialog.ShowDialog();  //printPreviewDialog.ShowDialog(this);
     }

     private void btnPrint_Click(object sender, EventArgs e)
     {
         if (printDialog.ShowDialog(this) == DialogResult.OK)
             printPreviewDialog.Document = printDocument;  //nsb: V.IMP.            
             printDocument.Print();       
     }        
   
     private void btnStep5BoysSMS_Click(object sender, EventArgs e)
     {
        // Under construction !
     }


     //Devise func tobe comman for both boys & girls
     public  void ManipulateColumnLikedByConcate
         (string strRel, string strTable, string strColumnConcate) //o = boys/girlsTableAdapter object obj1. Update() deffered.
     {
         ////unknown err cause for 'Girls' only solution try, but not solved
         //if (this.dataSet1.GirlsLikedBy.Count ==0)
         //this.girlsLikedByTableAdapter1.Fill(this.dataSet1.GirlsLikedBy); //Cause table data was not available for no reason.        
        

         System.Data.DataRelation relLikedBy = this.dataSet1.Relations[strRel]; //.RelationName; try this.dataSet1.relationGirlsGirlsLikedBy
         //ds.GirlsRow defined in dataset
         string tmpStrHoldConcated = "";
         foreach (DataRow rowParent in this.dataSet1.Tables[strTable].Rows)
         {
             if (rowParent.RowState == DataRowState.Deleted) continue;  //break to exit all loops
             //Find to boy-code 
           //  try
            // {
                 DataRow[] childRows = rowParent.GetChildRows(relLikedBy); // childrow count was zero, now solved by
             //}
             //catch (DeletedRowInaccessibleException ex)
             //{
             //    continue; // neglect only this row
             //}
             // adding  this.boysLikedByTableAdapter1.Fill(this.dataSet1.BoysLikedBy ); in form_load()
             //Inner-loop w.r.t qry
             tmpStrHoldConcated = ""; //reset for next rec.
             foreach (DataRow childRow in childRows) //   qryBoysAndBoysLikedByTableAdapter.)
             {
                 // Instead of copying "BoysLikedBy" of child row to parent with concating for each iteration, save it
                 // in temp string and copy to table-column after this loop
                 //boyRow1["BoysLikedByConcat"] = (string)boyRow1["BoysLikedByConcat"] + (string)childRow["BoysLikedBy"];
                 tmpStrHoldConcated = tmpStrHoldConcated + ", " + childRow["IdLikedBy"].ToString();//["BoysLikedBy"];
             }
             //Post inner-loop
             rowParent[strColumnConcate] = tmpStrHoldConcated;
         }
         //obj1 = (YuvaParichay.DataSet1TableAdapters.BoysTableAdapter) obj1;//= new DataSet1TableAdapters.BoysTableAdapter ();
         ////YuvaParichay.DataSet1TableAdapters.BoysTableAdapter 
         //    obj1.Update(this.dataSet1); // This is not saving/upthis.dataSet1aating data
         //boysTableAdapter.Update(this.dataSet1); //This works. V. good!      
         //MessageBox.Show("Boy Report Saved! ");
     }
        
      
     public void InsertIntoTableBoysLikedBy(string strSqlCmd, DataTable dt) //Needs to be discarded but has ref with ProcessData_Backup()
      {
        // strSqlCmd (strCmd) = "INSERT INTO BoysLikedBy (IdCandidateFK, IdLikedBy) SELECT Boys.IdCandidatePK, GirlsLike.IdCandidateFK FROM (Boys INNER JOIN  GirlsLike ON Boys.IdCandidatePK = GirlsLike.IdILike) ";     
        YuvaParichay.Properties.Settings settings = new  YuvaParichay.Properties.Settings();
         OleDbConnection   oledbConn = new OleDbConnection();
            // oledbConn = settings.YuvaParichayConnectionString;
        OleDbCommand oledbCmd = new OleDbCommand ();
        OleDbCommand oledbCmdUpd = new OleDbCommand();
        oledbCmdUpd.CommandText = strSqlCmd;
         
        string    oledbConnStr = settings.YuvaParichayConnectionString;
        //Better: YuvaParichay.Properties.Settings.Default.YuvaParichayConnectionString;     
        oledbConn.ConnectionString = oledbConnStr; //boysTableAdapter.Connection;  //word 'boys..' is to get general conn.
            //myboysLBTA.Connection;  //YuvaParichay.Properties.Settings 
        oledbCmd = new OleDbCommand(strSqlCmd, oledbConn); //V.IMP: by default strSqlCmd will be SelectCommand (not del/inser/update) of oledbDA.
         //oledbCmd
            // myboysLBTA1 = new OleDbDataAdapter(odbCmd);
        OleDbDataAdapter oledbDA = new OleDbDataAdapter(oledbCmd);
        oledbDA = new OleDbDataAdapter(oledbCmd);
        oledbDA.UpdateCommand = oledbCmdUpd;

            //   myboysLBTA1.Fill(this.dataSet1.BoysLikedBy);
    //oledbDA.Fill(dt); //why it is reqd?
            //  boysTableAdapter.Update(this.dataSet1); //tested, OK.
        //strSqlCmd;
        oledbDA.Update(this.dataSet1) ; //watch if works! , 
         // For BoysTableAdaptor.update(dt) / (dt) / (Row) / (Row[])

          //An System.Data.OleDb.OleDbCommand used during System.Data.Common.DbDataAdapter.Update(System.Data.DataSet) 
         //to update records in the data source that correspond to modified rows in the System.Data.DataSet.

        OleDbCommand oledbCmdDel = new OleDbCommand();
        oledbCmdUpd.CommandText = strSqlCmd;
     
    // this.tableAdapterManager.BoysLikedByTableAdapter .Adapter.DeleteCommand =  
          //this.Adapter.InsertCommand.ExecuteNonQuery();
      }

     public void ProcessData()
     {
         //Dt 12-3-15 Redesign ProcessData() [A] for Boys/GirlsLikedBy table to Delete rec, Refill data from other tables 
         //and [B} for Boy/GirlTable to Regenerate ..LikedByConcate column. 
         // We require 2 oledbDataAdaptor for each table ? Probably yes.
         //oledbConnection = only one.
         //oledbCommand = 2 for Delete, Insert and Update each for each Boys/GirlsLikedBy table  
         //             = 2 for Deleting col. Boys/GirlsLikedByConcat ?, Update for each Boys/Girls table after re-manipulating
         //                 Boys/GirlsLikedByConcat col. data
             

         OleDbConnection oledbConn = new OleDbConnection(YuvaParichay.Properties.Settings.Default.YuvaParichayConnectionString);

         //WARNING!!! aLL  ExecuteNonQuery() for sql commands modify data in data-source only probably not in DataTable mem-obj.
         //Will this affect adversely even if data is processed? Yes
         //Define Sql strings
         //Boys/GirlsLikedBy
         string strCmdTxtDelBoysLikedBy = "DELETE FROM BoysLikedBy";
         string strCmdTxtDelGirlsLikedBy = "DELETE FROM GirlsLikedBy";

         string strCmdTxtInsBoysLikedBy = "INSERT INTO BoysLikedBy (IdCandidateFK, IdLikedBy) SELECT Boys.IdCandidatePK, GirlsLike.IdCandidateFK FROM (Boys INNER JOIN  GirlsLike ON Boys.IdCandidatePK = GirlsLike.IdILike) ";
         string strCmdTxtInsGirlsLikedBy = "INSERT INTO GirlsLikedBy (IdCandidateFK, IdLikedBy) SELECT Girls.IdCandidatePK, BoysLike.IdCandidateFK FROM (Girls INNER JOIN  BoysLike ON Girls.IdCandidatePK = BoysLike.IdILike) ";

         //reqd? No, It is well Updated thru dataset (ds)
         //string strCmdTxtUpdBoysLikedBy = "UPDATE  BoysLikedBy SET  IdCandidateFK =IdCandidateFK , IdLikedBy =IdLikedBy ";
         //string strCmdTxtUpdGirlsLikedBy = "UPDATE  GirlsLikedBy SET  IdCandidateFK =IdCandidateFK , IdLikedBy =IdLikedBy ";

         //Boys/Girls : dele data of col. BoysLikedByConcat is directly not possible, so do this thru' UpdateCmd
         // string strCmdTxtUpdBoysRemoveBoysLikedByConcat = "UPDATE  Boys SET  BoysLikedByConcat = '' "; //May not be reqd.
         //string strCmdTxtUpdGirlsRemoveGirlsLikedByConcat = "UPDATE  Girls SET  GirlsLikedByConcat ='' ";

         //Instead this try update thru dataset (ds)
   //      string strCmdTxtUpdBoys = "UPDATE Boys SET  BoysLikedByConcat = BoysLikedByConcat ";
         //string strCmdTxtUpdGirls = "UPDATE  Girls SET  GirlsLikedByConcat =GirlsLikedByConcat ";

         //OleDbCommand cmdDelBoyLikedBy = new OleDbCommand();
         OleDbDataAdapter oledbDA = new OleDbDataAdapter(); //Will be used for many tasks
         oledbConn.Open(); // we better check its state (IsOpen) before this line exec.

         // //Process-1: Dele before Insert BoysLikedBy table
         oledbDA.DeleteCommand = new OleDbCommand(strCmdTxtDelBoysLikedBy, oledbConn);
         oledbDA.DeleteCommand.ExecuteNonQuery(); oledbDA.DeleteCommand = null;     
         //Dele before Insert GirlsLikedBy table
         oledbDA.DeleteCommand = new OleDbCommand(strCmdTxtDelGirlsLikedBy, oledbConn);
         oledbDA.DeleteCommand.ExecuteNonQuery(); oledbDA.DeleteCommand = null;

         progressBarShare.Value = 20;

         // //Process-2:  Insert after del BoysLikedBy table
         oledbDA.InsertCommand = new OleDbCommand(strCmdTxtInsBoysLikedBy, oledbConn);
         oledbDA.InsertCommand.ExecuteNonQuery(); oledbDA.InsertCommand = null;
         //Insert after del GirlsLikedBy table
         oledbDA.InsertCommand = new OleDbCommand(strCmdTxtInsGirlsLikedBy, oledbConn);
         oledbDA.InsertCommand.ExecuteNonQuery(); oledbDA.InsertCommand = null;

         //Data successfully deleted/Inserted in data-source but still exists in DataTable mem-obj.
         boysLikedByTableAdapter1.Fill(this.dataSet1.BoysLikedBy);
   //      girlsLikedByTableAdapter1.Fill(this.dataSet1.GirlsLikedBy); // it is repeated in Manipulate.. func

         progressBarShare.Value = 40;

         //Process-3:
         ////Update after Insert BoysLikedBy table: Not reqd for this "Manipulated Table"? Reqd for ManipulateColumnLikedByConcate
         //oledbDA.UpdateCommand = new OleDbCommand(strCmdTxtUpdBoysLikedBy, oledbConn);
         //oledbDA.UpdateCommand.ExecuteNonQuery(); oledbDA.UpdateCommand = null;
         ////Update after Insert GirlsLikedBy table
         //oledbDA.UpdateCommand = new OleDbCommand(strCmdTxtUpdGirlsLikedBy, oledbConn);
         //oledbDA.UpdateCommand.ExecuteNonQuery(); oledbDA.UpdateCommand = null;

         //Manipulate ColumnLikedByConcate for table Boys and Girls
         //this.girlsLikedByTableAdapter1.Fill(this.dataSet1.GirlsLikedBy); //Cause table data is not available
                  
         ManipulateColumnLikedByConcate("BoysBoysLikedBy", "Boys", "BoysLikedByConcat"); //o = boys/girlsTableAdapter
         progressBarShare.Value = 60;
         
         // this.girlsLikedByTableAdapter1.Fill(this.dataSet1.GirlsLikedBy); //Cause table data is not available
         //Why  prev. line cause data loss in table? So put it right when reqd.
         //this.girlsLikedByTableAdapter1.Fill(this.dataSet1.GirlsLikedBy); //Cause table data is not available 

         //Try by another DA.
         //string cmdText = "SELECT DISTINCT BoysLike.IdCandidateFK, BoysLike.IdILike, BoysLikedBy.IdLikedBy FROM BoysLike INNER JOIN BoysLikedBy ON (BoysLike.IdILike=BoysLikedBy.IdLikedBy) AND (BoysLike.IdCandidateFK=BoysLikedBy.IdCandidateFK)";         

         string strCmdTxtSelGirlsLikedBy = "SELECT  GirlsLikedBy.IdCandidateFK, GirlsLikedBy.IdLikedBY FROM GirlsLikedBy";
         oledbDA.SelectCommand = new OleDbCommand(strCmdTxtSelGirlsLikedBy, oledbConn);
         this.dataSet1.GirlsLikedBy.Clear(); //clear before fill
         oledbDA.Fill(this.dataSet1.GirlsLikedBy); 

         ManipulateColumnLikedByConcate("GirlsGirlsLikedBy", "Girls", "GirlsLikedByConcat"); //o = boys/girlsTableAdapter         
         progressBarShare.Value = 80;         
         //Update after Manipulating column 'BoysLikedByConcat' for Boys table
        // oledbDA.UpdateCommand = new OleDbCommand(strCmdTxtUpdBoys, oledbConn);  
        // oledbDA.UpdateCommand.ExecuteNonQuery(); oledbDA.UpdateCommand = null;
         //Update after Manipulating column 'GirlsLikedByConcat' for Girls table
         //oledbDA.UpdateCommand = new OleDbCommand(strCmdTxtUpdGirls, oledbConn);
         //oledbDA.UpdateCommand.ExecuteNonQuery(); oledbDA.UpdateCommand = null;
        // this.boysTableAdapter.Adapter.UpdateCommand.CommandText = strCmdTxtUpdBoys;
         this.boysTableAdapter.Update(dataSet1.Boys  ); //ds, mmazingly 'ds' did not show err: ,but err is still there! 
         this.girlsTableAdapter.Update(dataSet1.Girls); //ds
         progressBarShare.Value = 100;
        //this.boysTableAdapter.Adapter.UpdateCommand.ExecuteNonQuery(); //temp
        // if(this.boysTableAdapter.Adapter.UpdateCommand.Connection.State != ConnectionState.Open)
        //     this.boysTableAdapter.Adapter.UpdateCommand.Connection.Open ();
//      this.boysTableAdapter.Adapter.UpdateCommand.ExecuteNonQuery(); //Parameter ?_1 has no default value. oleDBExc.

         //this.boysTableAdapter.Update(dataSet1); 
         //dataSet1.Boys ,ds, mmazingly 'ds' did not show err: ,but err is still there! 
        // this.boysTableAdapter.Update(this.dataSet1); // This line could again have saved my 1 day. dataSet1 Did not work. Why?
         // Ambiguity may be due to both has seperate instances of object. WARNING! We must use only one.
         progressBarShare.Value = 0; //reset
         MessageBox.Show(" All Data Entered By Step 1 & 2 Untill Now Are Processed.\n Re-Processing is Required, if These Data Are Modified by Add/Edit/Delete");
     }

     private void ProcessData_Backup()
     {
         // Following lines now go to Report (Form2) ?
         //    //this.dataSet1.qryBoysAndBoysLikedBy.
         //nsb not reqd    MakeAllDataGridInvisible(); //instead qryAppendIntoBoysLikedByGirls/Boys may be reqd AFTER DEL ALL REC!
         //girlsDataGridView.Visible = true;
         //girlsDataGridView.Dock = DockStyle.Fill;
         //nsb not reqd         dgvQryBoysAndBoysLikedBy.Visible = true;   
         //nsb not reqd         dgvQryBoysAndBoysLikedBy.Dock = DockStyle.Fill;
         //nsb //dgvQryBoysAndBoysLikedBy.Select ()  ; //activates the control.
         // nsb //dgvQryGirlsAndGirlsLikedBy.Select(); //activates the control.

         //Prob: How to run qryAppendIntoBoysLikedByGirls/Boys    Keep
         // qryAppendIntoBoysLikedByGirls/Boys may be reqd AFTER DEL ALL REC.
         // ""DELETE FROM BoysLikedBy""   //"APPEND INTO BOYSLIKEDBY WHERE ......."

         //"APPEND INTO         BoysLikedBy FROM   ( BoysLikedBy.IdCandidateFK INNER JOIN
         //        GirlsLike ON BoysLikedBy.IdCandidateFK = GirlsLike.IdILike) "

         //More correct
         //SELECT        Boys.IdCandidatePK, GirlsLike.IdCandidateFK FROM (Boys INNER JOIN
         //  GirlsLike ON Boys.IdCandidatePK = GirlsLike.IdILike)
         //All correct
         // INSERT INTO BoysLikedBy (IdCandidateFK, IdLikedBy) SELECT   
         //Boys.IdCandidatePK, GirlsLike.IdCandidateFK FROM (Boys INNER JOIN
         //GirlsLike ON Boys.IdCandidatePK = GirlsLike.IdILike)

         //dgvQryAppendIntoBoysLikedByGirls
         //   dgvQryBoysAndBoysLikedBy.

         //dataGridView1.Rows.Clear(); //V. Good It will clear all data. 
         //myDataTable.Rows.Clear(); also good for removing from table directly.

         // (1A) Boys Must clear existing data.
         // ds.BoysLikedBy.Rows.Clear(); //ds.Tables["BoysLikedBy"].Rows.Clear ();  Both works ? None works!, why?
         // ds.Tables["BoysLikedBy"].Rows.Clear();
         //Try sql 
         //declare var
         DataSet1TableAdapters.BoysLikedByTableAdapter myboysLBTA = new DataSet1TableAdapters.BoysLikedByTableAdapter();
         myboysLBTA.Connection.Open();
         int cnt = this.dataSet1.BoysLikedBy.Count;
         int cnt1 = dataSet1.BoysLikedBy.Count;  // fails. showing count = 0 ibstead of 56
         this.dataSet1.BoysLikedBy.Clear(); //  It works.[ 
         this.dataSet1.BoysLikedBy.Rows.Clear(); //it is extra
         this.boysLikedByTableAdapter1.Fill(this.dataSet1.BoysLikedBy);
         this.boysLikedByTableAdapter1.Update(this.dataSet1);
         boysLikedByTableAdapter1.Update(this.dataSet1);
         boysTableAdapter.Update(this.dataSet1);

         myboysLBTA.Update(this.dataSet1);

         string strCmd = "DELETE FROM BoysLikedBy";
         //this.boysLikedByTableAdapter1.Update(ds);//tmp
         OleDbConnection odbConn = myboysLBTA.Connection;
         // this.boysLikedByTableAdapter1.Update (dataSet1);//tmp
         OleDbCommand odbCmd = new OleDbCommand(strCmd, odbConn);
         OleDbDataAdapter myboysLBTA1 = new OleDbDataAdapter(odbCmd);
         this.boysLikedByTableAdapter1.Fill(this.dataSet1.BoysLikedBy);

         boysTableAdapter.Update(this.dataSet1);  //new hope.
         boysTableAdapter.Update(this.dataSet1); // alternative that sometimes works better.

         // (1B) Girls Must clear existing data.
         this.dataSet1.GirlsLikedBy.Rows.Clear();
         //myboysLBTA1.Fill(ds.GirlsLikedBy); //new hope
         // myboysLBTA.Fill(ds.GirlsLikedBy); //new hope
         this.girlsLikedByTableAdapter1.Fill(this.dataSet1.GirlsLikedBy); //new hope
         girlsTableAdapter.Update(this.dataSet1);
         //this.dataSet1.Tables.Clear(); // testing tmp. Clears all tbl from collections. Remove rel 1st.
         girlsTableAdapter.Update(this.dataSet1);

         // (2A)Boy Must fill BoysLikedBy /Girls Table from complex query.
         //Ready made qry as used in MS Access ('qryAppendIntoBoysLikedByGirls') is not working here.
         // DataSet1TableAdapters.BoysLikedByTableAdapter myboysLBTA = new DataSet1TableAdapters.BoysLikedByTableAdapter ();                 
         strCmd = "INSERT INTO BoysLikedBy (IdCandidateFK, IdLikedBy) SELECT Boys.IdCandidatePK, GirlsLike.IdCandidateFK FROM (Boys INNER JOIN  GirlsLike ON Boys.IdCandidatePK = GirlsLike.IdILike) ";
         InsertIntoTableBoysLikedBy(strCmd, this.dataSet1.Boys); //testing, OK. 
         //odbConn = myboysLBTA.Connection; 
         //  odbCmd = new OleDbCommand (strCmd, odbConn); 
         //  myboysLBTA1 = new OleDbDataAdapter(odbCmd);
         //  myboysLBTA1.Fill(ds.BoysLikedBy);
         //  boysTableAdapter.Update(this.dataSet1); //tested, OK.

         // (2-B)Girls. Must fill BoysLikedBy /Girls Table from complex query.
         strCmd = "INSERT INTO GirlsLikedBy (IdCandidateFK, IdLikedBy) SELECT Girls.IdCandidatePK, BoysLike.IdCandidateFK FROM (Girls INNER JOIN  BoysLike ON Girls.IdCandidatePK = BoysLike.IdILike) ";
         InsertIntoTableBoysLikedBy(strCmd, this.dataSet1.GirlsLikedBy); //fails
         InsertIntoTableBoysLikedBy(strCmd, this.dataSet1.Girls);
         InsertIntoTableBoysLikedBy(strCmd, this.dataSet1.Girls);
         //ds.BoysLikedBy.Rows.Count 

         odbCmd = new OleDbCommand(strCmd, odbConn);
         myboysLBTA1 = new OleDbDataAdapter(odbCmd);
         myboysLBTA1.Fill(this.dataSet1.GirlsLikedBy); // It is must. May be that database is updated but table is not so; 
         //this may cause Update() to copy same-old data to database
         girlsTableAdapter.Update(this.dataSet1);//tested, OK. Even thou connectyion.Isopen = false          

         // (3A) Boys:  Manipulate column 'BoysLikedByConcate' from table 'BoysLikedBy'.
         // In MS Access we used 'report' to directly print; that is not available here.   
         //  System.Data.DataRelation relBoyLikedBy = ds.Relations["BoysBoysLikedBy"]; //.RelationName; try ds.relationGirlsGirlsLikedBy
         //  //ds.GirlsRow defined in dataset
         //string tmpStrHoldConcated = "";
         //foreach (DataRow boyRow1 in ds.Tables["Boys"].Rows)
         //{
         //    //Find to boy-code 
         //    DataRow[] childRows = boyRow1.GetChildRows(relBoyLikedBy); // childrow count was zero, now solved by
         //    // adding  this.boysLikedByTableAdapter1.Fill(this.dataSet1.BoysLikedBy ); in form_load()
         //    //Inner-loop w.r.t qry
         //    tmpStrHoldConcated = ""; //reset for next rec.
         //    foreach (DataRow childRow in childRows) //   qryBoysAndBoysLikedByTableAdapter.)
         //    {
         //        // Instead of copying "BoysLikedBy" of child row to parent with concating for each iteration, save it
         //        // in temp string and copy to table-column after this loop
         //        //boyRow1["BoysLikedByConcat"] = (string)boyRow1["BoysLikedByConcat"] + (string)childRow["BoysLikedBy"];
         //        tmpStrHoldConcated = tmpStrHoldConcated + ", " + (string)childRow["IdLikedBy"]; //["BoysLikedBy"];
         //    }
         //    //Post inner-loop
         //    boyRow1["BoysLikedByConcat"] = tmpStrHoldConcated;
         //}

         ManipulateColumnLikedByConcate("BoysBoysLikedBy", "Boys", "BoysLikedByConcat"); //o = boys/girlsTableAdapter
         boysTableAdapter.Update(this.dataSet1); // This is not saving/updsaating data? This time is doing.
         boysTableAdapter.Update(this.dataSet1); //This works. V. good!? No, It removed prev. line result.      
         MessageBox.Show("Boy Report Saved! ");

         //(3-B)Girl: Manipulate column 'BoysLikedBtConcate'
         System.Data.DataRelation relGirlLikedBy = this.dataSet1.Relations["GirlsGirlsLikedBy"]; // ds.Relations[  RelationName;
         //         girlsLikeBindingSource.DataMember = ds.Relations["GirlsGirlsLike"].RelationName;  //try as in step2 ? No
         //System.Data.DataRelation  relGirlLikedBy =relationGirlsGirlsLikedBy; //try
         string tmpStrHoldConcated = ""; //Init
         //Outer loop
         foreach (DataRow girlRow1 in this.dataSet1.Tables["Girls"].Rows)
         {
             DataRow[] childRows = girlRow1.GetChildRows(relGirlLikedBy); // childrow count was zero, now solved by
             tmpStrHoldConcated = ""; //reset for next rec..
             //Inner loop
             foreach (DataRow childRow in childRows) //   qryBoysAndBoysLikedByTableAdapter.) Try type GirlsRow /BoysRow indtead DataRow
             {
                 MessageBox.Show("Testing Girl Problem");
                 //   string strNsbTmp = "delete this line";
                 // Instead of copying "BoysLikedBy" of child row to parent with concating for each iteration, save it
                 // in temp string and copy to table-column after this loop
                 //boyRow1["BoysLikedByConcat"] = (string)boyRow1["BoysLikedByConcat"] + (string)childRow["BoysLikedBy"];
                 tmpStrHoldConcated = tmpStrHoldConcated + ", " + (string)childRow["IdLikedBy"]; //["BoysLikedBy"];
             }
             //Post inner-loop
             girlRow1["GirlsLikedByConcat"] = tmpStrHoldConcated;
         }

         ManipulateColumnLikedByConcate("GirlsGirlsLikedBy", "Girls", "GirlsLikedByConcat"); //o = boys/girlsTableAdapter

         girlsTableAdapter.Update(this.dataSet1);
         girlsTableAdapter.Update(this.dataSet1); //This works. V. good!
         MessageBox.Show("Girls Report Saved! ");      
     }

     private void dgvBoysLike_RowLeave(object sender, DataGridViewCellEventArgs e)
     {
         DataRowView currentDataRowView = (DataRowView)dgvBoysLike.CurrentRow.DataBoundItem;
        //DataRow rowRef= new DataRow ();
        try
        {
            DataRow row1 =  currentDataRowView.Row;
           // if (dgvBoysLike.IsCurrentRowDirty || row1.RowState == DataRowState.Deleted)
             if (dgvBoysLike.IsCurrentRowDirty )

                btnSaveStep2BoyChoices.PerformClick();
           // rowRef = row1;
        }
        catch (NullReferenceException ex)
        {
            MessageBox.Show(ex.Message);

            //   if (dgvBoysLike.IsCurrentRowDirty)    
            // dgvBoysLike.Rows[e.RowIndex].State =  DataGridViewElementStates
            //dgvBoysLike.CurrentRow.Cells[1].EditedFormattedValue = 4  //VIP: It needs to be transferred to DataBoundItem.

            
        }
         //dgvBoysLike.CurrentRow temp
     }

     private void dgvGirlsLike_RowLeave(object sender, DataGridViewCellEventArgs e)
     {
         if (dgvGirlsLike.IsCurrentRowDirty) 
         btnSaveStep2GirlChoices.PerformClick();
     }

     private void listBoxBoys_SelectedIndexChanged(object sender, EventArgs e)
     {

     }

     private void toolStripMenuItem1_Click(object sender, EventArgs e)
     {

     }

     private void toolStripMenuItem5_Click(object sender, EventArgs e)
     {
         aboutBox ab = new aboutBox();
         ab.Show();
     }

     private void toolStripMenuItem2_Click(object sender, EventArgs e)
     {
         //Help.ShowHelp(this, "file://c:\\helpfiles\\help.chm"); 
         //Help.ShowHelp(this, "F:\\Dropbox\\YPHelp\\YPHelpPrj.chm"); 
         Help.ShowHelp(this, "YPHelpPrj.chm");         
        // F:\Dropbox\YPHelp
     }

     private void donateToolStripMenuItem_Click(object sender, EventArgs e)
     {

         MessageBox.Show("If you wish to donate towards developement & future upgradation of this application Software, my Bank Acct is: State Bank of India: Account No = 10413318942 ");
     }

     private void checkBox1_CheckedChanged(object sender, EventArgs e)
     {

     }

     private void menuStripMainMenu_ItemClicked(object sender, ToolStripItemClickedEventArgs e)
     {

     }

     private void txtStepHelp_TextChanged(object sender, EventArgs e)
     {

     }

     private void dgvBoys_CellValidating(object sender, DataGridViewCellValidatingEventArgs e)
     {
        // //Validate ony if chkIsCodeNumericOnly is ticked, else exit.
        //if  (!this.chkIsCodeNumericOnly.Checked == true) return ; 

        // string headerText =
        //        dgvBoys.Columns[e.ColumnIndex].HeaderText;

        //if (!headerText.Equals("IdCandidatePK")) return;

        // dgvBoys.Columns["IdCandidatePK"].ValueType = typeof(int);

        //      if ( e.FormattedValue.GetType () != typeof(int))
        //          {
        //     dgvBoys.Rows[e.RowIndex].ErrorText =
        //         "Code must be numeric only";
        //     e.Cancel = true;
        // }


// sample if (e.FormattedValue.GetType() != dgvLoadTable.CurrentCell.ValueType.UnderlyingSystemType)

// myColumn.ValueType = typeof(int);
//Then, instead of CellValidating event, you can subscribe to DataError event (it will get raised whenever data entered into the cell by the user or the application is wrong). (When data in the column is bound to datasource, ValueType is assigned by default to the type of bound data)

// void dataGridView1_DataError(object sender, DataGridViewDataErrorEventArgs e)
//        {
//            // process your data error here
//            Console.WriteLine(dataGridView1.Rows[e.RowIndex].Cells[e.ColumnIndex].ValueType + "\n" + e.Exception); 
//        }            
     }

     private void dgvBoys_CellEndEdit(object sender, DataGridViewCellEventArgs e)
     {
         // Clear the row error in case the user presses ESC.   
    //dgvBoys.Rows[e.RowIndex].ErrorText = String.Empty;
     }

     private void dgvQryBoysAndBoysLikedBy_CellContentClick(object sender, DataGridViewCellEventArgs e)
     {

     }

     private void pnlDataGrid_Paint(object sender, PaintEventArgs e)
     {

     }

     private void dgvQryMatchBoyGirl_CellContentClick(object sender, DataGridViewCellEventArgs e)
     {

     }

     private void groupBox8_Enter(object sender, EventArgs e)
     {

     }

     private void textBox1_TextChanged(object sender, EventArgs e)
     {

     }

     private void groupBox9_Enter(object sender, EventArgs e)
     {

     }

     private void fileToolStripMenuItem_Click(object sender, EventArgs e)
     {

     }

     private void dgvGirlsLike_CellContentClick(object sender, DataGridViewCellEventArgs e)
     {

     }

     private void toolStripMenuItemTools_Click(object sender, EventArgs e)
     {

     }

     private void fillCodeToolStripMenuItem_Click(object sender, EventArgs e)
     {
        

     }

     private void delOldDataRetrieveRestoreDataFromToolStripMenuItem_Click(object sender, EventArgs e)
     {

     }

     private void pnlProcessSteps_Paint(object sender, PaintEventArgs e)
     {

     }

     private void label12_Click(object sender, EventArgs e)
     {

     }

     private void groupBox1_Enter(object sender, EventArgs e)
     {

     }

     private void groupBox4_Enter(object sender, EventArgs e)
     {

     }

     private void textBox2_TextChanged(object sender, EventArgs e)
     {

     }

     private void dgvBoysLike_CellContentClick(object sender, DataGridViewCellEventArgs e)
     {

     }

     private void listBoxGirls_SelectedIndexChanged(object sender, EventArgs e)
     {

     }

   

     private void dgvBoys_CellContentClick(object sender, DataGridViewCellEventArgs e)
     {

     }

     private void fillCodeToolStripMenuItemBoys_Click(object sender, EventArgs e)
     {
         try
         {
         formCodeRange formCodeRange1 = new formCodeRange();
         //formCodeRange1.Visible = true; elde .showdialog ->err
         //formCodeRange1.Activate(); // 
         //formCodeRange1.Show(); //  .Load();
         //formCodeRange1.Focus();
         formCodeRange1.ShowDialog();    //this could have saved my 1 day
         //Fill by SQL Command (1)dataset (2)database  (3)gridview can not be modify by prog.

         //formCodeRange.Visible = true;
         //formCodeRange.Activate(); // 
         //formCodeRange.Show(); //  .Load();
         //formCodeRange.Focus();
         
         int n1;
         int rowsCnt = this.dataSet1.Boys.Rows.Count;
         int intCodeEnd1 = formCodeRange1.intCodeEnd;
         int intCodeStart1 = formCodeRange1.intCodeStart;
         int RngCnt = formCodeRange1.intCodeEnd - formCodeRange1.intCodeStart;
         if (RngCnt == 0)  return;
         //Pre-loop. Locate last existing row? No
         //int intN = (int)n1.
        // DataRow dr1 = new DataRow();
         for (n1 = rowsCnt-1; n1 <= rowsCnt+RngCnt-1; n1++)
         {            
      //       //DataRow dr1 = new DataRow() ;
      //       DataRow dr1 = ds.Boys.NewRow  ();
      //       //DataRow dr = dt.NewRow();  sample
      //       DataColumn dc1 = new DataColumn();
      //       dc1 = ds.Boys.Columns[0]; 
      //       dr1 = ds.Boys.Rows[n1];  //.ItemArray[1]; 
      //       dr1[dc1] = intCodeStart1++;
      //      // dc1 = ds.Boys.Columns[1]; 
      //      //string  tmpStr =dc1.ColumnName  ; //= "16"; // n1;
      //ds.Boys.Rows.Add(dr1); //ds.Boys);  

      // //ds.Boys.Rows[n1][0] = intCodeStart1++;

      this.dataSet1.Boys.Rows.Add(this.dataSet1.Boys.NewRow()[0] = intCodeStart1++);  //["IdCandidatePK"] = intCodeStart1);    //[n1][0] = intCodeStart1++;
             // dr1.
             //dr1.Field    <"IdCandidatePK"> 
             //[IdCandidatePK] = 16; ; // [IdCandidatePK] ;
             //. .ItemArray 
             // rowParent[strColumnConcate] = tmpStrHoldConcated;

         }
         //post-loop. Save to database thru adaptor 
         this .boysTableAdapter.Update(this.dataSet1);
         //Clear data from table & refill, so that they are seen in DatagridView
         this.dataSet1.Boys.Clear();
         this.boysTableAdapter.Fill(this.dataSet1.Boys); 
         //how to fill datagridView?
         
        // this.boysBindingSource1 = null;
         //this.boysBindingSource1.DataMember = "Boys";
         this.boysBindingSource.DataSource  = this.dataSet1.Boys ;


       //  this.boysBindingSource1 = new BindingSource(components); // boysBindingSource;
       //  this.boysBindingSource1.DataMember = "Boys";
       //  this.boysBindingSource1 .ResetBindings(false); //false=same data struct
         //this.boysBindingSource1.databind() 
         this.dgvBoys.DataSource = this.boysBindingSource; 
         this.dgvBoys.Refresh();
         //this.boysBindingSource1 = this.bo
         //this.dgvBoys.

         MessageBox.Show("Boys-Code range Appended!");
          }
         catch  (Exception ex)
         {
             MessageBox.Show(ex.Message);
         }
 
     }

     private void FillCodeToolStripMenuItemGirls_Click(object sender, EventArgs e)
     {
         try
         {
             formCodeRange formCodeRange1 = new formCodeRange();
             formCodeRange1.ShowDialog();    //.AcceptButton = cmdOK

             int n1;
             int rowsCnt = this.dataSet1.Girls.Rows.Count;
             int intCodeEnd1 = formCodeRange1.intCodeEnd;
             int intCodeStart1 = formCodeRange1.intCodeStart;
             int RngCnt = formCodeRange1.intCodeEnd - formCodeRange1.intCodeStart;
             if (RngCnt == 0) return;
             //loop
             for (n1 = rowsCnt - 1; n1 <= rowsCnt + RngCnt - 1; n1++)
             {
                 this.dataSet1.Girls.Rows.Add(this.dataSet1.Girls.NewRow()[0] = intCodeStart1++);  //["IdCandidatePK"] = intCodeStart1);    //[n1][0] = intCodeStart1++;
             }
             //post-loop. Save to database thru adaptor 
             //this.girlsTableAdapter1.Update(this.dataSet1);
             this.girlsTableAdapter.Update(this.dataSet1);
             //Clear data from table & refill, so that they are seen in DatagridView
             this.dataSet1.Girls.Clear();
             //this.girlsTableAdapter1.Fill(this.dataSet1.Girls);
             this.girlsTableAdapter.Fill(this.dataSet1.Girls);
             this.girlsBindingSource.DataSource = this.dataSet1.Girls;
             this.dgvGirls.DataSource = this.girlsBindingSource;
             this.dgvGirls.Refresh();
             MessageBox.Show("Girls-Code range Appended!");
         }
         catch (Exception ex)
         {
             MessageBox.Show(ex.Message);
         }
     }

     private void copyBackupDataToToolStripMenuItem_Click(object sender, EventArgs e)
     {//Comment/UnComment = ctrl+K,ctrl + C/U
         //string fileName = "test.txt";
         //string sourcePath = @"C:\Users\Public\TestFolder";
         //string targetPath = @"C:\Users\Public\TestFolder\SubDir";

         //// Use Path class to manipulate file and directory paths.
         //string sourceFile = System.IO.Path.Combine(sourcePath, fileName);
         //string destFile = System.IO.Path.Combine(targetPath, fileName);

         //// To copy a folder's contents to a new location:
         //// Create a new target folder, if necessary.
         //if (!System.IO.Directory.Exists(targetPath))
         //{
         //    System.IO.Directory.CreateDirectory(targetPath);
         //}

         //// To copy a file to another location and 
         //// overwrite the destination file if it already exists.
         //System.IO.File.Copy(sourceFile, destFile, true);
         
         //if (ApplicationDeployment.IsNetworkDeployed)
         //{
         //    try
         //    {
         //        using (StreamReader sr = new StreamReader(ApplicationDeployment.CurrentDeployment.DataDirectory + @"\CSV.txt"))
         //        {
         //            MessageBox.Show(sr.ReadToEnd());
         //        }
         //    }
         //    catch (Exception ex)
         //    {
         //        MessageBox.Show("Could not read file. Error message: " + ex.Message);
         //    }
         //}


         try
         {
             //1) Path.Combine(ApplicationDeployment.CurrentDeployment.DataDirectory, "test.accdb");     
            //Do not add "\" before the second parameter path value, otherwise it just return the second value as the result:
             //Path.Combine(ApplicationDeployment.CurrentDeployment.DataDirectory, "test.accdb");
             //myApplicationPath = Path.Combine(Application.ApplicationDeployment.CurrentDeployment.DataDirectory, "\myDatabase.accdb")
        //String myApplicationPath = Application.LocalUserAppDataPath ; // .CurrentDeployment.DataDirectory, "\myDatabase.accdb")  
        
         string srcfileName = "YuvaParichay.accdb";
         string dstfileName = "YuvaParichayB.accdb";
         //String baseDir = AppDomain.CurrentDomain.BaseDirectory;
         //String localUserAppDataPath = Application.LocalUserAppDataPath;//At Debug: "C:\Users\DualCorePC\AppData\Local\YuvaParichay\YuvaParichayFormApp\1.0.0.0" is empty.
         //MessageBox.Show("localUserAppDataPath is = " + localUserAppDataPath);

        // string sourcePath = baseDir;
        // string destPath = baseDir;
         //// Use Path class to manipulate file and directory paths.
         //string sourceFile = System.IO.Path.Combine(baseDir, srcfileName);
         //string destFile = System.IO.Path.Combine(baseDir, dstfileName);

        //InvalidDeploymentExeption was caught at Debug Time. "Application Identity was not set."
         string sourceFile = Path.Combine(ApplicationDeployment.CurrentDeployment.DataDirectory, srcfileName);//V. Good!
         string destFile = Path.Combine(ApplicationDeployment.CurrentDeployment.DataDirectory, dstfileName);
         //MessageBox.Show("ApplicationDeployment.CurrentDeployment.DataDirectory" + ApplicationDeployment.CurrentDeployment.DataDirectory);

         System.IO.File.Copy(sourceFile, destFile, true);
         MessageBox.Show("Data Backedup.");
         }
         catch (Exception ex)
         {
             MessageBox.Show(ex.Message);
         }
         //// To copy a folder's contents to a new location:
         //// Create a new target folder, if necessary.
         //if (!System.IO.Directory.Exists(targetPath))
         //{
         //    System.IO.Directory.CreateDirectory(targetPath);
         //}

         //// To copy a file to another location and 
         //// overwrite the destination file if it already exists.
        
         //String baseDir= AppDomain.CurrentDomain.BaseDirectory;
         //String localUserAppDataPath= Application.LocalUserAppDataPath;
         ////YuvaParichay .Properties .Settings.
         //String  connStr= this.boysTableAdapter.Connection.ConnectionString;  
     }

     private void dgvBoysLike_RowsRemoved(object sender, DataGridViewRowsRemovedEventArgs e)
     {
         //try
         //{
         //    this.dataSet1.BoysLike.Rows[e.RowIndex].AcceptChanges(); //commit delete
         //    boysLikeTableAdapter.Update(this.dataSet1.Boys.Rows[e.RowIndex]); // modify data source.
         //}
         //catch (IndexOutOfRangeException ex)
         //{
         //   // throw;
         //}

     }

     private void dgvBoysLike_CurrentCellDirtyStateChanged(object sender, EventArgs e)
     {
         //if (dgvBoysLike.IsCurrentCellDirty)
         //{
         //    dgvBoysLike.CommitEdit(DataGridViewDataErrorContexts.Commit);
         //}
     }

     private void dgvGirlsLike_CurrentCellDirtyStateChanged(object sender, EventArgs e)
     {
         //if (dgvGirlsLike.IsCurrentCellDirty)
         //{
         //    dgvBoysLike.CommitEdit(DataGridViewDataErrorContexts.Commit);
         //    this.girlsLikeTableAdapter.Update(this.dataSet1);

         //}
     }

     private void delCurDataAndRestoreFromToolStripMenuItem_Click(object sender, EventArgs e)
     {
          DialogResult dr= MessageBox.Show("Really Want To Remove All Current Data And Restore Data From Backup File?", "WARNING!!!!", MessageBoxButtons.YesNo);
          if (dr == System.Windows.Forms.DialogResult.Yes)
          {
              try
              {
                  string srcfileName = "YuvaParichayB.accdb";
                  string dstfileName = "YuvaParichay.accdb";
                  String baseDir = AppDomain.CurrentDomain.BaseDirectory;
                  //// Use Path class to manipulate file and directory paths.
                  //string sourceFile = System.IO.Path.Combine(baseDir, srcfileName);
                  //string destFile = System.IO.Path.Combine(baseDir, dstfileName);
                  string sourceFile = System.IO.Path.Combine(ApplicationDeployment.CurrentDeployment.DataDirectory, srcfileName);
                  string destFile = System.IO.Path.Combine(ApplicationDeployment.CurrentDeployment.DataDirectory, dstfileName);

                  System.IO.File.Copy(sourceFile, destFile, true);

                  //Refill/Refresh
                  this.boysTableAdapter.Fill(dataSet1.Boys);
                  this.boysLikeTableAdapter.Fill(dataSet1.BoysLike);
                  this.boysLikedByTableAdapter1.Fill(dataSet1.BoysLikedBy);
                  this.girlsTableAdapter.Fill(dataSet1.Girls);
                  this.girlsLikeTableAdapter.Fill(dataSet1.GirlsLike);
                  this.girlsLikedByTableAdapter1.Fill(dataSet1.GirlsLikedBy);
                  MakeAllDataGridInvisible();

                  MessageBox.Show("Backup Data Restored.");
              }
              catch (Exception ex)
              {
                  MessageBox.Show(ex.Message);
              }
          } // end of if
     }

     private void delCurrentDataAndCreateNewDataToolStripMenuItem_Click(object sender, EventArgs e)
     {        
         //Warning!
         DialogResult dr= MessageBox.Show("Really Want To Remove All Current Data And Start From Scratch?", "WARNING!!!!", MessageBoxButtons.YesNo);
         if (dr == System.Windows.Forms.DialogResult.Yes)
         {
             try
             {
             //this.dataSet1.Clear();
             //    //Open Conn.
             //if (this.boysTableAdapter.Adapter.DeleteCommand.Connection.State == ConnectionState.Closed)
             //    this.boysTableAdapter.Adapter.DeleteCommand.Connection.Open();
             //this.boysTableAdapter.Update(dataSet1);
             //this.boysTableAdapter.Adapter.DeleteCommand.ExecuteNonQuery();  

             //this.girlsTableAdapter.Update(dataSet1);

             //this.boysLikeTableAdapter.Update(dataSet1);
             //this.girlsLikeTableAdapter.Update(dataSet1);

             //this.boysLikedByTableAdapter1.Update(dataSet1);
             //this.girlsLikedByTableAdapter1.Update(dataSet1);

             OleDbConnection oledbConn = new OleDbConnection(YuvaParichay.Properties.Settings.Default.YuvaParichayConnectionString);

             string strCmdTxtDelBoysLikedBy = "DELETE FROM BoysLikedBy";
             string strCmdTxtDelGirlsLikedBy = "DELETE FROM GirlsLikedBy";
             string strCmdTxtDelBoys = "DELETE FROM Boys";
             string strCmdTxtDelGirls = "DELETE FROM Girls";
             string strCmdTxtDelBoysLike = "DELETE FROM BoysLike";
             string strCmdTxtDelGirlsLike = "DELETE FROM GirlsLike";
  
             //Boys/Girls : dele data of col. BoysLikedByConcat is directly not possible, so do this thru' UpdateCmd
             // string strCmdTxtUpdBoysRemoveBoysLikedByConcat = "UPDATE  Boys SET  BoysLikedByConcat = '' "; //May not be reqd.
             //string strCmdTxtUpdGirlsRemoveGirlsLikedByConcat = "UPDATE  Girls SET  GirlsLikedByConcat ='' ";

             //Instead this try update thru dataset (ds)
             //      string strCmdTxtUpdBoys = "UPDATE Boys SET  BoysLikedByConcat = BoysLikedByConcat ";
             //string strCmdTxtUpdGirls = "UPDATE  Girls SET  GirlsLikedByConcat =GirlsLikedByConcat ";

             //OleDbCommand cmdDelBoyLikedBy = new OleDbCommand();
             OleDbDataAdapter oledbDA = new OleDbDataAdapter(); //Will be used for many tasks
             oledbConn.Open(); // we better check its state (IsOpen) before this line exec.

              oledbDA.DeleteCommand = new OleDbCommand(strCmdTxtDelBoys, oledbConn);
             oledbDA.DeleteCommand.ExecuteNonQuery(); oledbDA.DeleteCommand = null;
             oledbDA.DeleteCommand = new OleDbCommand(strCmdTxtDelBoysLike, oledbConn);
             oledbDA.DeleteCommand.ExecuteNonQuery(); oledbDA.DeleteCommand = null;             
             oledbDA.DeleteCommand = new OleDbCommand(strCmdTxtDelBoysLikedBy, oledbConn);
             oledbDA.DeleteCommand.ExecuteNonQuery(); oledbDA.DeleteCommand = null;

             oledbDA.DeleteCommand = new OleDbCommand(strCmdTxtDelGirls, oledbConn);
             oledbDA.DeleteCommand.ExecuteNonQuery(); oledbDA.DeleteCommand = null;
             oledbDA.DeleteCommand = new OleDbCommand(strCmdTxtDelGirlsLike, oledbConn);
             oledbDA.DeleteCommand.ExecuteNonQuery(); oledbDA.DeleteCommand = null;
             oledbDA.DeleteCommand = new OleDbCommand(strCmdTxtDelGirlsLikedBy, oledbConn);
             oledbDA.DeleteCommand.ExecuteNonQuery(); oledbDA.DeleteCommand = null;

            //Refill/Refresh
             this.boysTableAdapter.Fill(dataSet1.Boys);
             this.boysLikeTableAdapter.Fill(dataSet1.BoysLike);
             this.boysLikedByTableAdapter1.Fill(dataSet1.BoysLikedBy);
             this.girlsTableAdapter.Fill(dataSet1.Girls);
             this.girlsLikeTableAdapter.Fill(dataSet1.GirlsLike);
             this.girlsLikedByTableAdapter1.Fill(dataSet1.GirlsLikedBy);
             MakeAllDataGridInvisible();

             MessageBox.Show("All Current Data Cleared!");
             }
            catch (Exception ex)
            {
             MessageBox.Show(ex.Message);
            }
         }

     }

     private void delCurrentDataAndLoadSampleDataToolStripMenuItem_Click(object sender, EventArgs e)
     {
        DialogResult dr= MessageBox.Show("Really Want To Remove All Current Data And Load Sample Data For Practice?", "WARNING!!!!", MessageBoxButtons.YesNo);
        if (dr == System.Windows.Forms.DialogResult.Yes)
        {
            try
            {
                string srcfileName = "YuvaParichaySample.accdb";
                string dstfileName = "YuvaParichay.accdb";
                String baseDir = AppDomain.CurrentDomain.BaseDirectory;

                //// Use Path class to manipulate file and directory paths.
                //string sourceFile = System.IO.Path.Combine(baseDir, srcfileName);
                //string destFile = System.IO.Path.Combine(baseDir, dstfileName);

                string sourceFile = System.IO.Path.Combine(ApplicationDeployment.CurrentDeployment.DataDirectory, srcfileName);
                string destFile = System.IO.Path.Combine(ApplicationDeployment.CurrentDeployment.DataDirectory, dstfileName);
                //// To copy a file to another location and 
                //// overwrite the destination file if it already exists.
                System.IO.File.Copy(sourceFile, destFile, true);

                //Refill/Refresh
                this.boysTableAdapter.Fill(dataSet1.Boys);
                this.boysLikeTableAdapter.Fill(dataSet1.BoysLike);
                this.boysLikedByTableAdapter1.Fill(dataSet1.BoysLikedBy);
                this.girlsTableAdapter.Fill(dataSet1.Girls);
                this.girlsLikeTableAdapter.Fill(dataSet1.GirlsLike);
                this.girlsLikedByTableAdapter1.Fill(dataSet1.GirlsLikedBy);
                MakeAllDataGridInvisible();

                MessageBox.Show("Sample Data Are Loaded For Practice and Learning \nThat MUST Be Deleted Before Actaul Data is Entered");
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        } //End of if
     }
                
       
   }    
   
  }

