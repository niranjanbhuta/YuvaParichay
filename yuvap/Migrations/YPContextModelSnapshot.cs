// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using yuvap.Models;

namespace nsbTestAspCore.Migrations
{
    [DbContext(typeof(YPContext))]
    partial class YPContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("yuvap.Models.Boy", b =>
                {
                    b.Property<int>("BoyId")
                        .HasColumnName("Reg. Num.")
                        .HasColumnType("int");

                    b.Property<string>("BoylikedByConcat")
                        .HasColumnName("Girls Want to Cantact Me")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<bool>("EditLock");

                    b.Property<string>("MobileNum")
                        .HasColumnName("Mobile Num.")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .IsUnicode(false);

                    b.HasKey("BoyId");

                    b.ToTable("Boy","yuvap");
                });

            modelBuilder.Entity("yuvap.Models.BoyLikes", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BoyId")
                        .HasColumnName("BoyID")
                        .HasColumnType("int");

                    b.Property<int>("BoyPrefers")
                        .HasColumnType("int)");

                    b.HasKey("ID");

                    b.HasIndex("BoyId");

                    b.HasIndex("BoyPrefers")
                        .HasName("Idx_BoyLikes_BoyPrefers");

                    b.ToTable("BoyLikes","yuvap");
                });

            modelBuilder.Entity("yuvap.Models.Girl", b =>
                {
                    b.Property<int>("GirlId")
                        .HasColumnName("GirlID")
                        .HasColumnType("int");

                    b.Property<string>("GirlLikedByConcat")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("MobileNum")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.HasKey("GirlId");

                    b.ToTable("Girl","yuvap");
                });

            modelBuilder.Entity("yuvap.Models.GirlLikes", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("GirlId")
                        .HasColumnName("GirlID")
                        .HasColumnType("int");

                    b.Property<int>("GirlPrefers")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("GirlId");

                    b.HasIndex("GirlPrefers")
                        .HasName("Idx_GirlLikes_GirlPrefers");

                    b.ToTable("GirlLikes","yuvap");
                });

            modelBuilder.Entity("yuvap.Models.BoyLikes", b =>
                {
                    b.HasOne("yuvap.Models.Boy", "Boys")
                        .WithMany("BoyLikes")
                        .HasForeignKey("BoyId")
                        .HasConstraintName("FK_BoyLikesBoyID_BoyBoyID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("yuvap.Models.Girl", "BoyPrefersNavigation")
                        .WithMany("BoyLikes")
                        .HasForeignKey("BoyPrefers")
                        .HasConstraintName("FK_BoyLikesBoyPrefers_GirlGirlID");
                });

            modelBuilder.Entity("yuvap.Models.GirlLikes", b =>
                {
                    b.HasOne("yuvap.Models.Girl", "Girls")
                        .WithMany("GirlLikes")
                        .HasForeignKey("GirlId")
                        .HasConstraintName("FK_GirlLikesGirlID_GirlGirlID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("yuvap.Models.Boy", "GirlPrefersNavigation")
                        .WithMany("GirlLikes")
                        .HasForeignKey("GirlPrefers")
                        .HasConstraintName("FK_GirlLikesGirlPrefers_BoyBoyID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
